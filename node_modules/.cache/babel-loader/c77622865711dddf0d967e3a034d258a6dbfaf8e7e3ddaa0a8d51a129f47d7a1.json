{"ast":null,"code":"var _jsxFileName = \"/Users/Karol/Desktop/WSB-NLU/TIU/Soundwe/soundwe/src/components/RegisterForm.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport { UserContext } from \"./UserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterForm = () => {\n  _s();\n  const {\n    users,\n    setCurrentUser\n  } = useContext(UserContext);\n  const navigate = useNavigate();\n\n  // Definicja schematu walidacji z Yup\n  const validationSchema = Yup.object().shape({\n    email: Yup.string().email(\"Nieprawidłowy adres e-mail\").required(\"Pole jest wymagane\"),\n    password: Yup.string().required(\"Pole jest wymagane\"),\n    confirmPassword: Yup.string().oneOf([Yup.ref(\"password\"), null], \"Hasła muszą być identyczne\").required(\"Pole jest wymagane\")\n  });\n  const initialValues = {\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  };\n  const handleRegister = (values, {\n    setSubmitting,\n    setFieldError\n  }) => {\n    // Sprawdzenie, czy użytkownik już istnieje\n    const userExists = users.some(u => u.email === values.email);\n    if (userExists) {\n      setFieldError(\"email\", \"Użytkownik o podanym adresie e-mail już istnieje\");\n      setSubmitting(false);\n      return;\n    }\n\n    // Stworzenie nowego użytkownika (tutaj można by użyć odpowiedniej metody do dodawania użytkownika)\n    const newUser = {\n      id: users.length + 1,\n      // Przykładowe generowanie ID (w praktyce lepiej użyć UUID lub coś podobnego)\n      email: values.email,\n      haslo: values.password\n    };\n\n    // Ustawienie nowego użytkownika jako aktualnie zalogowanego\n    setCurrentUser(newUser);\n    navigate(\"/ustawienia-konta\"); // Przekierowanie do strony ustawień konta po zarejestrowaniu\n  };\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: handleRegister,\n    children: ({\n      isSubmitting\n    }) => /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          className: \"form-label\",\n          children: \"E-mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          type: \"email\",\n          name: \"email\",\n          id: \"email\",\n          className: \"form-control\",\n          placeholder: \"E-mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"email\",\n          component: \"div\",\n          className: \"alert alert-danger\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          className: \"form-label\",\n          children: \"Has\\u0142o\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          type: \"password\",\n          name: \"password\",\n          id: \"password\",\n          className: \"form-control\",\n          placeholder: \"Has\\u0142o\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"password\",\n          component: \"div\",\n          className: \"alert alert-danger\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"confirmPassword\",\n          className: \"form-label\",\n          children: \"Potwierd\\u017A has\\u0142o\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          type: \"password\",\n          name: \"confirmPassword\",\n          id: \"confirmPassword\",\n          className: \"form-control\",\n          placeholder: \"Potwierd\\u017A has\\u0142o\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"confirmPassword\",\n          component: \"div\",\n          className: \"alert alert-danger\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        disabled: isSubmitting,\n        children: isSubmitting ? \"Przetwarzanie...\" : \"Zarejestruj się\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center mt-3\",\n        children: /*#__PURE__*/_jsxDEV(\"small\", {\n          children: [\"Masz ju\\u017C konto?\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/logowanie\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: \"#f8b296\"\n              },\n              children: \"Zaloguj si\\u0119\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(RegisterForm, \"FElXBH05mJ3kedoVE+Ck7bmtqZA=\", false, function () {\n  return [useNavigate];\n});\n_c = RegisterForm;\nexport default RegisterForm;\nvar _c;\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"names":["React","Link","useNavigate","Formik","Form","Field","ErrorMessage","Yup","UserContext","jsxDEV","_jsxDEV","RegisterForm","_s","users","setCurrentUser","useContext","navigate","validationSchema","object","shape","email","string","required","password","confirmPassword","oneOf","ref","initialValues","handleRegister","values","setSubmitting","setFieldError","userExists","some","u","newUser","id","length","haslo","onSubmit","children","isSubmitting","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","name","placeholder","component","disabled","to","style","color","_c","$RefreshReg$"],"sources":["/Users/Karol/Desktop/WSB-NLU/TIU/Soundwe/soundwe/src/components/RegisterForm.jsx"],"sourcesContent":["import React from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport * as Yup from \"yup\";\nimport { UserContext } from \"./UserContext\";\n\n\nconst RegisterForm = () => {\n  const { users, setCurrentUser } = useContext(UserContext);\n  const navigate = useNavigate();\n\n  // Definicja schematu walidacji z Yup\n  const validationSchema = Yup.object().shape({\n    email: Yup.string().email(\"Nieprawidłowy adres e-mail\").required(\"Pole jest wymagane\"),\n    password: Yup.string().required(\"Pole jest wymagane\"),\n    confirmPassword: Yup.string()\n      .oneOf([Yup.ref(\"password\"), null], \"Hasła muszą być identyczne\")\n      .required(\"Pole jest wymagane\"),\n  });\n\n  const initialValues = {\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n  };\n\n  const handleRegister = (values, { setSubmitting, setFieldError }) => {\n    // Sprawdzenie, czy użytkownik już istnieje\n    const userExists = users.some((u) => u.email === values.email);\n    if (userExists) {\n      setFieldError(\"email\", \"Użytkownik o podanym adresie e-mail już istnieje\");\n      setSubmitting(false);\n      return;\n    }\n\n    // Stworzenie nowego użytkownika (tutaj można by użyć odpowiedniej metody do dodawania użytkownika)\n    const newUser = {\n      id: users.length + 1, // Przykładowe generowanie ID (w praktyce lepiej użyć UUID lub coś podobnego)\n      email: values.email,\n      haslo: values.password,\n    };\n\n    // Ustawienie nowego użytkownika jako aktualnie zalogowanego\n    setCurrentUser(newUser);\n    navigate(\"/ustawienia-konta\"); // Przekierowanie do strony ustawień konta po zarejestrowaniu\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={validationSchema}\n      onSubmit={handleRegister}\n    >\n      {({ isSubmitting }) => (\n        <Form>\n          <div className=\"mb-3\">\n            <label htmlFor=\"email\" className=\"form-label\">\n              E-mail\n            </label>\n            <Field\n              type=\"email\"\n              name=\"email\"\n              id=\"email\"\n              className=\"form-control\"\n              placeholder=\"E-mail\"\n            />\n            <ErrorMessage name=\"email\" component=\"div\" className=\"alert alert-danger\" />\n          </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"password\" className=\"form-label\">\n              Hasło\n            </label>\n            <Field\n              type=\"password\"\n              name=\"password\"\n              id=\"password\"\n              className=\"form-control\"\n              placeholder=\"Hasło\"\n            />\n            <ErrorMessage name=\"password\" component=\"div\" className=\"alert alert-danger\" />\n          </div>\n          <div className=\"mb-3\">\n            <label htmlFor=\"confirmPassword\" className=\"form-label\">\n              Potwierdź hasło\n            </label>\n            <Field\n              type=\"password\"\n              name=\"confirmPassword\"\n              id=\"confirmPassword\"\n              className=\"form-control\"\n              placeholder=\"Potwierdź hasło\"\n            />\n            <ErrorMessage\n              name=\"confirmPassword\"\n              component=\"div\"\n              className=\"alert alert-danger\"\n            />\n          </div>\n          <button\n            type=\"submit\"\n            className=\"btn btn-primary\"\n            disabled={isSubmitting}\n          >\n            {isSubmitting ? \"Przetwarzanie...\" : \"Zarejestruj się\"}\n          </button>\n          <div className=\"text-center mt-3\">\n            <small>\n              Masz już konto?{\" \"}\n              <Link to=\"/logowanie\">\n                <span style={{ color: \"#f8b296\" }}>Zaloguj się</span>\n              </Link>\n            </small>\n          </div>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default RegisterForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}